{
  "version": "1",
  "metadata": {
    "marimo_version": "0.14.0"
  },
  "cells": [
    {
      "id": "Hbol",
      "code_hash": "3ed3672126e714c8293db024fad78ba4",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/plain": ""
          }
        }
      ],
      "console": []
    },
    {
      "id": "MJUe",
      "code_hash": "c893ed5b0534d1b92eb7b2bdc432d786",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/plain": ""
          }
        }
      ],
      "console": []
    },
    {
      "id": "vblA",
      "code_hash": "c95ce3d6d47a91a8f5975f57210692d4",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/plain": ""
          }
        }
      ],
      "console": []
    },
    {
      "id": "bkHC",
      "code_hash": "979f99bcda989c4849bf5fbed09c02e8",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/plain": ""
          }
        }
      ],
      "console": []
    },
    {
      "id": "lEQa",
      "code_hash": "1be711257427d0cbde8a97b6aee09b03",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/plain": ""
          }
        }
      ],
      "console": [
        {
          "type": "stream",
          "name": "stdout",
          "text": "520 = Nones: 206 + Exists: 314\n"
        }
      ]
    },
    {
      "id": "PKri",
      "code_hash": "8aa46e37acb614e57a270d5cd74884b2",
      "outputs": [
        {
          "type": "data",
          "data": {
            "application/json": "{\"acquifer-napari\": \"conda-forge/acquifer-napari\", \"affinder\": \"conda-forge/affinder\", \"anchor-droplet-chip\": \"conda-forge/anchor-droplet-chip\", \"arcos-gui\": \"conda-forge/arcos-gui\", \"avidaq\": \"conda-forge/avidaq\", \"bbii-decon\": \"conda-forge/bbii-decon\", \"beetlesafari\": \"conda-forge/beetlesafari\", \"blik\": \"conda-forge/blik\", \"brainglobe-napari-io\": \"conda-forge/brainglobe-napari-io\", \"brainglobe-segmentation\": \"conda-forge/brainglobe-segmentation\", \"brainglobe-utils\": \"conda-forge/brainglobe-utils\", \"brainreg\": \"conda-forge/brainreg\", \"brainrender-napari\": \"conda-forge/brainrender-napari\", \"btrack\": \"conda-forge/btrack\", \"cellfinder\": \"conda-forge/cellfinder\", \"cellpose-napari\": \"conda-forge/cellpose-napari\", \"darth-d\": \"conda-forge/darth-d\", \"devbio-napari\": \"conda-forge/devbio-napari\", \"domb-napari\": \"conda-forge/domb-napari\", \"empanada-napari\": \"conda-forge/empanada-napari\", \"epitools\": \"conda-forge/epitools\", \"generate-dense-patches\": \"conda-forge/generate-dense-patches\", \"grabber-ift\": \"conda-forge/grabber-ift\", \"guanine-crystal-analysis\": \"conda-forge/guanine-crystal-analysis\", \"hesperos\": \"conda-forge/hesperos\", \"iacs-ipac-reader\": \"conda-forge/iacs-ipac-reader\", \"ilastik-napari\": \"conda-forge/ilastik-napari\", \"image-composer\": \"conda-forge/image-composer\", \"image-part-selecter\": \"conda-forge/image-part-selecter\", \"imaxt-multiscale-plugin\": \"conda-forge/imaxt-multiscale-plugin\", \"in-silico-fate-mapping\": \"conda-forge/in-silico-fate-mapping\", \"koopa-viz\": \"conda-forge/koopa-viz\", \"label-creator\": \"conda-forge/label-creator\", \"large-image-viewer\": \"conda-forge/large-image-viewer\", \"layer-data-replace\": \"conda-forge/layer-data-replace\", \"misic-napari\": \"conda-forge/misic-napari\", \"morphometrics\": \"conda-forge/morphometrics\", \"morphometrics-engine\": \"conda-forge/morphometrics-engine\", \"movement\": \"conda-forge/movement\", \"napari-3d-counter\": \"conda-forge/napari-3d-counter\", \"napari-3d-ortho-viewer\": \"conda-forge/napari-3d-ortho-viewer\", \"napari-accelerated-pixel-and-object-classification\": \"conda-forge/napari-accelerated-pixel-and-object-classification\", \"napari-affinities\": \"conda-forge/napari-affinities\", \"napari-aicsimageio\": \"conda-forge/napari-aicsimageio\", \"napari-aideveloper\": \"conda-forge/napari-aideveloper\", \"napari-allencell-annotator\": \"conda-forge/napari-allencell-annotator\", \"napari-allencell-segmenter\": \"conda-forge/napari-allencell-segmenter\", \"napari-amdtrk\": \"conda-forge/napari-amdtrk\", \"napari-animated-gif-io\": \"conda-forge/napari-animated-gif-io\", \"napari-animation\": \"conda-forge/napari-animation\", \"napari-annotate\": \"conda-forge/napari-annotate\", \"napari-annotation-project\": \"conda-forge/napari-annotation-project\", \"napari-annotator\": \"conda-forge/napari-annotator\", \"napari-annotatorj\": \"conda-forge/napari-annotatorj\", \"napari-aphid\": \"conda-forge/napari-aphid\", \"napari-arboretum\": \"conda-forge/napari-arboretum\", \"napari-assistant\": \"conda-forge/napari-assistant\", \"napari-bbox\": \"conda-forge/napari-bbox\", \"napari-bfio\": \"conda-forge/napari-bfio\", \"napari-bigfish\": \"conda-forge/napari-bigfish\", \"napari-bigwarp\": \"conda-forge/napari-bigwarp\", \"napari-bil-data-viewer\": \"conda-forge/napari-bil-data-viewer\", \"napari-bioformats\": \"conda-forge/napari-bioformats\", \"napari-bioimageio\": \"conda-forge/napari-bioimageio\", \"napari-bio-sample-data\": \"conda-forge/napari-bio-sample-data\", \"napari-bleach-correct\": \"conda-forge/napari-bleach-correct\", \"napari-blender-bridge\": \"conda-forge/napari-blender-bridge\", \"napari-blob-detection\": \"conda-forge/napari-blob-detection\", \"napari-blossom\": \"conda-forge/napari-blossom\", \"napari-boardgame-maker\": \"conda-forge/napari-boardgame-maker\", \"napari-boids\": \"conda-forge/napari-boids\", \"napari-boxmanager\": \"conda-forge/napari-boxmanager\", \"napari-brainbow-diagnose\": \"conda-forge/napari-brainbow-diagnose\", \"napari-brightness-contrast\": \"conda-forge/napari-brightness-contrast\", \"napari-brushsettings\": \"conda-forge/napari-brushsettings\", \"napari-bud-cell-segmenter\": \"conda-forge/napari-bud-cell-segmenter\", \"napari-buds\": \"conda-forge/napari-buds\", \"napari-caphid\": \"conda-forge/napari-caphid\", \"napari-ccp4map\": \"conda-forge/napari-ccp4map\", \"napari-cell-centroid-annotator\": \"conda-forge/napari-cell-centroid-annotator\", \"napari-cellseg3d\": \"conda-forge/napari-cellseg3d\", \"napari-clipboard\": \"conda-forge/napari-clipboard\", \"napari-clusters-plotter\": \"conda-forge/napari-clusters-plotter\", \"napari-compressed-labels-io\": \"conda-forge/napari-compressed-labels-io\", \"napari-conidie\": \"conda-forge/napari-conidie\", \"napari-console\": \"conda-forge/napari-console\", \"napari-convpaint\": \"conda-forge/napari-convpaint\", \"napari-correct-drift\": \"conda-forge/napari-correct-drift\", \"napari-cryofibsem-monitor\": \"conda-forge/napari-cryofibsem-monitor\", \"napari-cupy-image-processing\": \"conda-forge/napari-cupy-image-processing\", \"napari-cursor-tracker\": \"conda-forge/napari-cursor-tracker\", \"napari-curtain\": \"conda-forge/napari-curtain\", \"napari-czann-segment\": \"conda-forge/napari-czann-segment\", \"napari-czifile2\": \"conda-forge/napari-czifile2\", \"napari-deeplabcut\": \"conda-forge/napari-deeplabcut\", \"napari-deepmeta\": \"conda-forge/napari-deepmeta\", \"napari-deepspot\": \"conda-forge/napari-deepspot\", \"napari-dexp\": \"conda-forge/napari-dexp\", \"napari-dv\": \"conda-forge/napari-dv\", \"napari-dvid\": \"conda-forge/napari-dvid\", \"napari-dzi-zarr\": \"conda-forge/napari-dzi-zarr\", \"napari-elementary-numpy-operations\": \"conda-forge/napari-elementary-numpy-operations\", \"napari-emd\": \"conda-forge/napari-emd\", \"napari-em-reader\": \"conda-forge/napari-em-reader\", \"napari-error-reporter\": \"conda-forge/napari-error-reporter\", \"napari-feature-classifier\": \"conda-forge/napari-feature-classifier\", \"napari-features\": \"conda-forge/napari-features\", \"napari-features-selector\": \"conda-forge/napari-features-selector\", \"napari-filament-annotator\": \"conda-forge/napari-filament-annotator\", \"napari-filaments\": \"conda-forge/napari-filaments\", \"napari-file-watcher\": \"conda-forge/napari-file-watcher\", \"napari-folder-browser\": \"conda-forge/napari-folder-browser\", \"napari-gemspa\": \"conda-forge/napari-gemspa\", \"napari-generic-simulator\": \"conda-forge/napari-generic-simulator\", \"napari-geojson\": \"conda-forge/napari-geojson\", \"napari-griottes\": \"conda-forge/napari-griottes\", \"napari-gruvbox\": \"conda-forge/napari-gruvbox\", \"napari-h5\": \"conda-forge/napari-h5\", \"napari-hdf5-labels-io\": \"conda-forge/napari-hdf5-labels-io\", \"napari-help\": \"conda-forge/napari-help\", \"napari-hierarchical\": \"conda-forge/napari-hierarchical\", \"napari-hough-circle-detector\": \"conda-forge/napari-hough-circle-detector\", \"napari-imagej\": \"conda-forge/napari-imagej\", \"napari-image-stacker\": \"conda-forge/napari-image-stacker\", \"napari-imaris-loader\": \"conda-forge/napari-imaris-loader\", \"napari-imc\": \"conda-forge/napari-imc\", \"napari-imsmicrolink\": \"conda-forge/napari-imsmicrolink\", \"napari-indices\": \"conda-forge/napari-indices\", \"napari-ip-workflow\": \"conda-forge/napari-ip-workflow\", \"napari-ism\": \"conda-forge/napari-ism\", \"napari-itk-io\": \"conda-forge/napari-itk-io\", \"napari-j\": \"conda-forge/napari-j\", \"napari-kics\": \"conda-forge/napari-kics\", \"napari-labelimg4classification\": \"conda-forge/napari-labelimg4classification\", \"napari-labeling\": \"conda-forge/napari-labeling\", \"napari-label-interpolator\": \"conda-forge/napari-label-interpolator\", \"napari-labelling-assistant\": \"conda-forge/napari-labelling-assistant\", \"napari-labelprop\": \"conda-forge/napari-labelprop\", \"napari-labels-overlap\": \"conda-forge/napari-labels-overlap\", \"napari-large-image-importer\": \"conda-forge/napari-large-image-importer\", \"napari-layer-details-display\": \"conda-forge/napari-layer-details-display\", \"napari-layer-table\": \"conda-forge/napari-layer-table\", \"napari-lazy-openslide\": \"conda-forge/napari-lazy-openslide\", \"napari-lf\": \"conda-forge/napari-lf\", \"napari-live-recording\": \"conda-forge/napari-live-recording\", \"napari-locan\": \"conda-forge/napari-locan\", \"napari-locpix\": \"conda-forge/napari-locpix\", \"napari-macrokit\": \"conda-forge/napari-macrokit\", \"napari-manual-transforms\": \"conda-forge/napari-manual-transforms\", \"napari-mat-file-reader\": \"conda-forge/napari-mat-file-reader\", \"napari-math\": \"conda-forge/napari-math\", \"napari-mat-images\": \"conda-forge/napari-mat-images\", \"napari-matplotlib\": \"conda-forge/napari-matplotlib\", \"napari-mclabel\": \"conda-forge/napari-mclabel\", \"napari-medical-image-formats\": \"conda-forge/napari-medical-image-formats\", \"napari-melt-pool-tracker\": \"conda-forge/napari-melt-pool-tracker\", \"napari-merge-stardist-masks\": \"conda-forge/napari-merge-stardist-masks\", \"napari-meshio\": \"conda-forge/napari-meshio\", \"napari-metroid\": \"conda-forge/napari-metroid\", \"napari-micromanager\": \"conda-forge/napari-micromanager\", \"napari-microscope\": \"conda-forge/napari-microscope\", \"napari-microtubule-analyzer\": \"conda-forge/napari-microtubule-analyzer\", \"napari-molecule-reader\": \"conda-forge/napari-molecule-reader\", \"napari-morphodynamics\": \"conda-forge/napari-morphodynamics\", \"napari-mouse-controls\": \"conda-forge/napari-mouse-controls\", \"napari-mrcfile-handler\": \"conda-forge/napari-mrcfile-handler\", \"napari-mrcfile-reader\": \"conda-forge/napari-mrcfile-reader\", \"napari-multitask\": \"conda-forge/napari-multitask\", \"napari-mzarr\": \"conda-forge/napari-mzarr\", \"napari-n2v\": \"conda-forge/napari-n2v\", \"napari-napari\": \"conda-forge/napari-napari\", \"napari-nasa-samples\": \"conda-forge/napari-nasa-samples\", \"napari-nd2-folder-viewer\": \"conda-forge/napari-nd2-folder-viewer\", \"napari-nd-annotator\": \"conda-forge/napari-nd-annotator\", \"napari-nd-cropper\": \"conda-forge/napari-nd-cropper\", \"napari-ndev\": \"conda-forge/napari-ndev\", \"napari-ndtiffs\": \"conda-forge/napari-ndtiffs\", \"napari-nibabel\": \"conda-forge/napari-nibabel\", \"napari-nifti\": \"conda-forge/napari-nifti\", \"napari-nikon-nd2\": \"conda-forge/napari-nikon-nd2\", \"napari-nlm\": \"conda-forge/napari-nlm\", \"napari-nyxus\": \"conda-forge/napari-nyxus\", \"napari-obj\": \"conda-forge/napari-obj\", \"napari-omaas\": \"conda-forge/napari-omaas\", \"napari-omero\": \"conda-forge/napari-omero\", \"napari-ome-zarr\": \"conda-forge/napari-ome-zarr\", \"napari-organoid-counter\": \"conda-forge/napari-organoid-counter\", \"napari-owncloud\": \"conda-forge/napari-owncloud\", \"napari-parallel\": \"conda-forge/napari-parallel\", \"napari-patchcreator\": \"conda-forge/napari-patchcreator\", \"napari-pdf-reader\": \"conda-forge/napari-pdf-reader\", \"napari-pdr-reader\": \"conda-forge/napari-pdr-reader\", \"napari-philow\": \"conda-forge/napari-philow\", \"napari-picasso\": \"conda-forge/napari-picasso\", \"napari-plot\": \"conda-forge/napari-plot\", \"napari-plot-profile\": \"conda-forge/napari-plot-profile\", \"napari-plugin-search\": \"conda-forge/napari-plugin-search\", \"napari-pointslayer-projection\": \"conda-forge/napari-pointslayer-projection\", \"napari-power-spectrum\": \"conda-forge/napari-power-spectrum\", \"napari-power-widgets\": \"conda-forge/napari-power-widgets\", \"napari-pram\": \"conda-forge/napari-pram\", \"napari-process-points-and-surfaces\": \"conda-forge/napari-process-points-and-surfaces\", \"napari-proofread-brainbow\": \"conda-forge/napari-proofread-brainbow\", \"napari-properties-plotter\": \"conda-forge/napari-properties-plotter\", \"napari-properties-viewer\": \"conda-forge/napari-properties-viewer\", \"napari-psf-analysis\": \"conda-forge/napari-psf-analysis\", \"napari-psf-simulator\": \"conda-forge/napari-psf-simulator\", \"napari-pssr\": \"conda-forge/napari-pssr\", \"napari-pyclesperanto-assistant\": \"conda-forge/napari-pyclesperanto-assistant\", \"napari-pystackreg\": \"conda-forge/napari-pystackreg\", \"napari-qrcode\": \"conda-forge/napari-qrcode\", \"napari-rembg\": \"conda-forge/napari-rembg\", \"napari-result-stack\": \"conda-forge/napari-result-stack\", \"napari-rioxarray\": \"conda-forge/napari-rioxarray\", \"napari-roi\": \"conda-forge/napari-roi\", \"napari-roi-registration\": \"conda-forge/napari-roi-registration\", \"napari-sam\": \"conda-forge/napari-sam\", \"napari-sam4is\": \"conda-forge/napari-sam4is\", \"napari-sc3d-viewer\": \"conda-forge/napari-sc3d-viewer\", \"napari-script-editor\": \"conda-forge/napari-script-editor\", \"napari-sdeconv\": \"conda-forge/napari-sdeconv\", \"napari-seedseg\": \"conda-forge/napari-seedseg\", \"napari-segment\": \"conda-forge/napari-segment\", \"napari-segment-anything\": \"conda-forge/napari-segment-anything\", \"napari-segment-blobs-and-things-with-membranes\": \"conda-forge/napari-segment-blobs-and-things-with-membranes\", \"napari-serialcellpose\": \"conda-forge/napari-serialcellpose\", \"napari-sif-reader\": \"conda-forge/napari-sif-reader\", \"napari-sift-registration\": \"conda-forge/napari-sift-registration\", \"napari-signal-selector\": \"conda-forge/napari-signal-selector\", \"napari-simpleannotate\": \"conda-forge/napari-simpleannotate\", \"napari-simpleitk-image-processing\": \"conda-forge/napari-simpleitk-image-processing\", \"napari-sim-processor\": \"conda-forge/napari-sim-processor\", \"napari-skimage\": \"conda-forge/napari-skimage\", \"napari-skimage-regionprops\": \"conda-forge/napari-skimage-regionprops\", \"napari-solarized\": \"conda-forge/napari-solarized\", \"napari-spacetx-explorer\": \"conda-forge/napari-spacetx-explorer\", \"napari-spatialdata\": \"conda-forge/napari-spatialdata\", \"napari-spatial-omics\": \"conda-forge/napari-spatial-omics\", \"napari-splinedist\": \"conda-forge/napari-splinedist\", \"napari-splineit\": \"conda-forge/napari-splineit\", \"napari-spreadsheet\": \"conda-forge/napari-spreadsheet\", \"napari-stable-diffusion\": \"conda-forge/napari-stable-diffusion\", \"napari-steinpose\": \"conda-forge/napari-steinpose\", \"napari-stl-exporter\": \"conda-forge/napari-stl-exporter\", \"napari-stracking\": \"conda-forge/napari-stracking\", \"napari-stress\": \"conda-forge/napari-stress\", \"napari-subboxer\": \"conda-forge/napari-subboxer\", \"napari-superres\": \"conda-forge/napari-superres\", \"napari-svg\": \"conda-forge/napari-svg\", \"napari-tabu\": \"conda-forge/napari-tabu\", \"napari-text-layer\": \"conda-forge/napari-text-layer\", \"napari-threedee\": \"conda-forge/napari-threedee\", \"napari-tiff\": \"conda-forge/napari-tiff\", \"napari-tiledb-bioimg\": \"conda-forge/napari-tiledb-bioimg\", \"napari-tiler\": \"conda-forge/napari-tiler\", \"napari-timeseries-opener-plugin\": \"conda-forge/napari-timeseries-opener-plugin\", \"napari-time-series-plotter\": \"conda-forge/napari-time-series-plotter\", \"napari-time-slicer\": \"conda-forge/napari-time-slicer\", \"napari-tissuumaps\": \"conda-forge/napari-tissuumaps\", \"napari-tomocube-data-viewer\": \"conda-forge/napari-tomocube-data-viewer\", \"napari-tomotwin\": \"conda-forge/napari-tomotwin\", \"napari-toothfairy-annotator\": \"conda-forge/napari-toothfairy-annotator\", \"napari-trackpy\": \"conda-forge/napari-trackpy\", \"napari-tracks-reader\": \"conda-forge/napari-tracks-reader\", \"napari-trait2d\": \"conda-forge/napari-trait2d\", \"napari-turing\": \"conda-forge/napari-turing\", \"napari-tyssue\": \"conda-forge/napari-tyssue\", \"napari-ufish\": \"conda-forge/napari-ufish\", \"napari-ui-tracer\": \"conda-forge/napari-ui-tracer\", \"napari-unicell\": \"conda-forge/napari-unicell\", \"napari-update-checker\": \"conda-forge/napari-update-checker\", \"napari-validate-random-label-predictions\": \"conda-forge/napari-validate-random-label-predictions\", \"napari-vedo-bridge\": \"conda-forge/napari-vedo-bridge\", \"napari-vesicles-segmentation\": \"conda-forge/napari-vesicles-segmentation\", \"napari-video\": \"conda-forge/napari_video\", \"napari-vodex\": \"conda-forge/napari-vodex\", \"napari-workflow-inspector\": \"conda-forge/napari-workflow-inspector\", \"napari-workflow-optimizer\": \"conda-forge/napari-workflow-optimizer\", \"napari-workshop-browser\": \"conda-forge/napari-workshop-browser\", \"napari-wsi\": \"conda-forge/napari-wsi\", \"napari-yapic-prediction\": \"conda-forge/napari-yapic-prediction\", \"napari-yolov5\": \"conda-forge/napari-yolov5\", \"napari-zelda\": \"conda-forge/napari-zelda\", \"napari-zulip\": \"conda-forge/napari-zulip\", \"natari\": \"conda-forge/natari\", \"nfinder\": \"conda-forge/nfinder\", \"offset-subtraction\": \"conda-forge/offset-subtraction\", \"okapi-em\": \"conda-forge/okapi-em\", \"palmari\": \"conda-forge/palmari\", \"partial-aligner\": \"conda-forge/partial-aligner\", \"partseg\": \"conda-forge/partseg\", \"partseg-smfish\": \"conda-forge/partseg-smfish\", \"platelet-unet-watershed\": \"conda-forge/platelet-unet-watershed\", \"platymatch\": \"conda-forge/platymatch\", \"psfmodels\": \"conda-forge/psfmodels\", \"pycudadecon\": \"conda-forge/pycudadecon\", \"recorder-napari\": \"conda-forge/recorder-napari\", \"redlionfish\": \"conda-forge/redlionfish\", \"set-calibration\": \"conda-forge/set-calibration\", \"skan\": \"conda-forge/skan\", \"smo\": \"conda-forge/smo\", \"snouty-viewer\": \"conda-forge/snouty-viewer\", \"spots-in-yeasts\": \"conda-forge/spots-in-yeasts\", \"stardist-napari\": \"conda-forge/stardist-napari\", \"the-segmentation-game\": \"conda-forge/the-segmentation-game\", \"tootapari\": \"conda-forge/tootapari\", \"vessel-express-napari\": \"conda-forge/vessel-express-napari\", \"vollseg-napari\": \"conda-forge/vollseg-napari\", \"vollseg-napari-mtrack\": \"conda-forge/vollseg-napari-mtrack\", \"waver\": \"conda-forge/waver\", \"workshop-demo\": \"conda-forge/workshop-demo\", \"world2data\": \"conda-forge/world2data\", \"yt-napari\": \"conda-forge/yt-napari\", \"zarpaint\": \"conda-forge/zarpaint\"}"
          }
        }
      ],
      "console": []
    },
    {
      "id": "Xref",
      "code_hash": "fb40384b7e49a87cda6ef92e7a1c645d",
      "outputs": [
        {
          "type": "data",
          "data": {
            "application/json": "{\"allencell-segmenter-ml\": null, \"alveoleye\": null, \"annotrack\": null, \"applet3\": null, \"arcospx-napari\": null, \"axondeepseg\": null, \"biaplotter\": null, \"brainglobe-registration\": null, \"brainglobe-stitch\": null, \"brainways\": null, \"brendan-beads\": null, \"cell-aap\": null, \"cellcanvas\": null, \"cellpose-counter\": null, \"cochlea-synapseg\": null, \"cryocanvas\": null, \"cut-detector\": null, \"cylindra\": null, \"destripe-lsfm\": null, \"disease-classifier\": null, \"elastix-napari\": null, \"epicure\": null, \"faser\": null, \"featureforest\": null, \"fish-scan\": null, \"fitellipsoid\": null, \"frontveg\": null, \"fspi-analysis\": null, \"harpy-analysis\": null, \"hipocount-napari\": null, \"iterseg\": null, \"lasso-3d\": null, \"lsfm-destripe-napari\": null, \"lsfm-fusion-napari\": null, \"manini\": null, \"microscope-napari\": null, \"midi-app-controller\": null, \"mikro-napari\": null, \"mmv-h4cells\": null, \"mmv-h4tracks\": null, \"mmv-playground\": null, \"mmv-regionseg\": null, \"motile-plugin\": null, \"mousechd-napari\": null, \"msi-explorer\": null, \"multireg\": null, \"napam\": null, \"napari-3dtimereg\": null, \"napari-activelearning\": null, \"napari-afmreader\": null, \"napari-apple\": null, \"napari-apr-viewer\": null, \"napari-argos-archive-reader\": null, \"napari-bacseg\": null, \"napari-basicpy\": null, \"napari-bee-annotator\": null, \"napari-biomag-annotator\": null, \"napari-biopb\": null, \"napari-blender\": null, \"napari-blosc2\": null, \"napari-bluesky\": null, \"napari-bootstrapper\": null, \"napari-calibration\": null, \"napari-camera\": null, \"napari-cardio-bio-eval\": null, \"napari-cci-annotator\": null, \"napari-chatgpt\": null, \"napari-checkerboard\": null, \"napari-clemreg\": null, \"napari-conference\": null, \"napari-cookiecut\": null, \"napari-cosmos-ts\": null, \"napari-cryoet-data-portal\": null, \"napari-cryofibsem-imgproc\": null, \"napari-ctc-io\": null, \"napari-curviewer\": null, \"napari-czi-reader\": null, \"napari-data-inspection\": null, \"napari-data-preview\": null, \"napari-deepfinder\": null, \"napari-demo\": null, \"napari-denoiseg\": null, \"napari-dinosim\": null, \"napari-dmc-brainmap\": null, \"napari-easy-augment-batch-dl\": null, \"napari-ehooke\": null, \"napari-epyseg\": null, \"napari-exodeepfinder\": null, \"napari-explorer\": null, \"napari-fast4dreg\": null, \"napari-feature-visualization\": null, \"napari-figure\": null, \"napari-file2folder\": null, \"napari-filter-labels-by-prop\": null, \"napari-findaureus\": null, \"napari-flim-phasor-plotter\": null, \"napari-grid-cropping\": null, \"napari-hello\": null, \"napari-himena\": null, \"napari-hippo\": null, \"napari-hsi-analysis\": null, \"napari-ids\": null, \"napari-imodmodel\": null, \"napari-input-visualizer\": null, \"napari-intensity-plotter\": null, \"napari-k2-wavebreaker\": null, \"napari-kld\": null, \"napari-labels\": null, \"napari-lattice\": null, \"napari-listener\": null, \"napari-live-flim\": null, \"napari-manual-registration\": null, \"napari-mask-density\": null, \"napari-memmap-tiff\": null, \"napari-mesofield\": null, \"napari-mm3\": null, \"napari-molseeq\": null, \"napari-moltrack\": null, \"napari-nanopyx\": null, \"napari-nninteractive\": null, \"napari-nucleaizer\": null, \"napari-nuclephaser\": null, \"napari-ome-zarr-navigator\": null, \"napari-open-ctc\": null, \"napari-openfibsem\": null, \"napari-opt-handler\": null, \"napari-orientationpy\": null, \"napari-phasors\": null, \"napari-pitcount-cfim\": null, \"napari-pixel-correction\": null, \"napari-pixseq\": null, \"napari-points2regions\": null, \"napari-potential-field-navigation\": null, \"napari-prism\": null, \"napari-psfgenerator\": null, \"napari-pyav\": null, \"napari-pymeshlab\": null, \"napari-quoll\": null, \"napari-roi-manager\": null, \"napari-roxas-ai\": null, \"napari-sairyscan\": null, \"napari-sam2long\": null, \"napari-samv2\": null, \"napari-save-transformed\": null, \"napari-sediment\": null, \"napari-segment-anything-2\": null, \"napari-segmentation-overlap-filter\": null, \"napari-segment-everything\": null, \"napari-segselect\": null, \"napari-shape-odyssey\": null, \"napari-simple-orthoviewer\": null, \"napari-sketchpose\": null, \"napari-smlmlab\": null, \"napari-spatial-correlation-plotter\": null, \"napari-spfluo\": null, \"napari-splinebox\": null, \"napari-spofi\": null, \"napari-spotiflow\": null, \"napari-stitcher\": null, \"napari-svetlana\": null, \"napari-swc-editor\": null, \"napari-swc-reader\": null, \"napari-tapenade-processing\": null, \"napari-tardis-em\": null, \"napari-timelapse-processor\": null, \"napari-tissue-cuboid-analysis\": null, \"napari-tmidas\": null, \"napari-tomodl\": null, \"napari-toska\": null, \"napari-tracing\": null, \"napari-trackastra\": null, \"napari-umap\": null, \"napari-unispac\": null, \"napari-utrack-loader\": null, \"napari-vascilia\": null, \"napari-vector-graphics\": null, \"napari-vectorizer\": null, \"napari-vemseg\": null, \"napari-video-cvdask\": null, \"napari-workshop-plugin\": null, \"napari-wsireg\": null, \"napari-xgboost\": null, \"napari-yolo5-mitosis-detector\": null, \"napari-zplane-depth-colorizer\": null, \"napping\": null, \"nellie\": null, \"neurofly\": null, \"organelle-segmenter-plugin\": null, \"ortho-view-napari\": null, \"platemapper\": null, \"platetrack\": null, \"popidd-io\": null, \"poser-napari\": null, \"psf-analysis-cfim\": null, \"pssr\": null, \"qhyccd-capture\": null, \"samcell-napari\": null, \"segment-embryo\": null, \"segmentree\": null, \"seu-3d\": null, \"surforama\": null, \"test-detect-spots\": null, \"tracking-challenge-demo\": null, \"unet-lungs-segmentation\": null, \"vessqc\": null, \"vollseg-napari-trackmate\": null}"
          }
        }
      ],
      "console": []
    },
    {
      "id": "SFPL",
      "code_hash": "714daa4d24ad51bb14b193122a6c147a",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/plain": ""
          }
        }
      ],
      "console": [
        {
          "type": "stream",
          "name": "stdout",
          "text": "{'name': 'vollseg-napari-mtrack', 'display_name': 'VollSeg Napari MTrack Plugin', 'visibility': 'public', 'icon': '', 'categories': [], 'schema_version': '0.2.1', 'on_activate': None, 'on_deactivate': None, 'contributions': {'commands': [{'id': 'vollseg-napari-mtrack.get_reader', 'title': 'Open data with VollSeg Napari MTrack Plugin', 'python_name': 'vollseg_napari_mtrack._reader:napari_get_reader', 'short_title': None, 'category': None, 'icon': None, 'enablement': None}, {'id': 'vollseg-napari-mtrack.get_microtubule_test_data', 'title': 'Load sample data from VollSeg Napari MTrack Plugin', 'python_name': 'vollseg_napari_mtrack._sample_data:get_microtubule_test_data', 'short_title': None, 'category': None, 'icon': None, 'enablement': None}, {'id': 'vollseg-napari-mtrack.widget', 'title': 'MTrack', 'python_name': 'vollseg_napari_mtrack._widget:plugin_wrapper_mtrack', 'short_title': None, 'category': None, 'icon': None, 'enablement': None}], 'readers': [{'command': 'vollseg-napari-mtrack.get_reader', 'filename_patterns': [], 'accepts_directories': True}], 'writers': None, 'widgets': [{'command': 'vollseg-napari-mtrack.widget', 'display_name': 'MTrack', 'autogenerate': False}], 'sample_data': [{'command': 'vollseg-napari-mtrack.get_microtubule_test_data', 'key': 'get_microtubule_test_data', 'display_name': 'Test Microtubule Kymographs'}], 'themes': None, 'menus': {}, 'submenus': None, 'keybindings': None, 'configuration': []}, 'package_metadata': {'metadata_version': '2.1', 'name': 'vollseg-napari-mtrack', 'version': '1.4.7', 'dynamic': None, 'platform': None, 'supported_platform': None, 'summary': 'Segment kymographs of microtubules, actin filaments and perform Ransac based fits to compute dynamic instability parameters for individual kymographs and also in batch', 'description': '# vollseg-napari-mtrack\\n\\n[![License BSD-3](https://img.shields.io/pypi/l/vollseg-napari-mtrack.svg?color=green)](https://github.com/Kapoorlabs-CAPED/vollseg-napari-mtrack/raw/main/LICENSE)\\n[![PyPI](https://img.shields.io/pypi/v/vollseg-napari-mtrack.svg?color=green)](https://pypi.org/project/vollseg-napari-mtrack)\\n[![Python Version](https://img.shields.io/pypi/pyversions/vollseg-napari-mtrack.svg?color=green)](https://python.org)\\n[![tests](https://github.com/Kapoorlabs-CAPED/vollseg-napari-mtrack/workflows/tests/badge.svg)](https://github.com/Kapoorlabs-CAPED/vollseg-napari-mtrack/actions)\\n[![codecov](https://codecov.io/gh/Kapoorlabs-CAPED/vollseg-napari-mtrack/branch/main/graph/badge.svg)](https://codecov.io/gh/Kapoorlabs-CAPED/vollseg-napari-mtrack)\\n[![napari hub](https://img.shields.io/endpoint?url=https://api.napari-hub.org/shields/vollseg-napari-mtrack)](https://napari-hub.org/plugins/vollseg-napari-mtrack)\\n\\nSegment kymographs of microtubules, actin filaments and perform Ransac based fits to compute dynamic instability parameters for individual kymographs and also in batch\\n\\n----------------------------------\\n\\nElaborate documentation for users of this repository at this [documentation]\\n\\nThis [napari] plugin was generated with [Cookiecutter] using [@caped]\\'s [cookiecutter-napari-plugin] template.\\n\\n<!--\\nDon\\'t miss the full getting started guide to set up your new package:\\nhttps://github.com/napari/cookiecutter-napari-plugin#getting-started\\n\\nand review the napari docs for plugin developers:\\nhttps://napari.org/stable/plugins/index.html\\n-->\\n\\n## Installation\\n\\nYou can install `vollseg-napari-mtrack` via [pip]:\\n\\n    pip install vollseg-napari-mtrack\\n\\n\\n\\nTo install latest development version :\\n\\n    pip install git+https://github.com/Kapoorlabs-CAPED/vollseg-napari-mtrack.git\\n\\n\\n## Contributing\\n\\nContributions are very welcome. Tests can be run with [tox], please ensure\\nthe coverage at least stays the same before you submit a pull request.\\n\\n## License\\n\\nDistributed under the terms of the [BSD-3] license,\\n\"vollseg-napari-mtrack\" is free and open source software\\n\\n## Issues\\n\\nIf you encounter any problems, please [file an issue] along with a detailed description.\\n\\n[napari]: https://github.com/napari/napari\\n[Cookiecutter]: https://github.com/audreyr/cookiecutter\\n[@napari]: https://github.com/napari\\n[@caped]: https://github.com/Kapoorlabs-CAPED/\\n[MIT]: http://opensource.org/licenses/MIT\\n[BSD-3]: http://opensource.org/licenses/BSD-3-Clause\\n[GNU GPL v3.0]: http://www.gnu.org/licenses/gpl-3.0.txt\\n[GNU LGPL v3.0]: http://www.gnu.org/licenses/lgpl-3.0.txt\\n[Apache Software License 2.0]: http://www.apache.org/licenses/LICENSE-2.0\\n[Mozilla Public License 2.0]: https://www.mozilla.org/media/MPL/2.0/index.txt\\n[cookiecutter-napari-plugin]: https://github.com/Kapoorlabs-CAPED/cookiecutter-kapoorlabs-napari-plugin\\n[documentation]: https://kapoorlabs-caped.github.io/vollseg-napari-mtrack\\n[file an issue]: https://github.com/Kapoorlabs-CAPED/vollseg-napari-mtrack/issues\\n\\n[napari]: https://github.com/napari/napari\\n[tox]: https://tox.readthedocs.io/en/latest/\\n[pip]: https://pypi.org/project/pip/\\n[PyPI]: https://pypi.org/\\n', 'description_content_type': 'text/markdown', 'keywords': None, 'home_page': 'https://github.com/Kapoorlabs-CAPED/vollseg-napari-mtrack', 'download_url': None, 'author': 'Varun Kapoor', 'author_email': 'randomaccessiblekapoor@gmail.com', 'maintainer': None, 'maintainer_email': None, 'license': 'BSD-3-Clause', 'classifier': ['Development Status :: 2 - Pre-Alpha', 'Framework :: napari', 'Intended Audience :: Developers', 'License :: OSI Approved :: BSD License', 'Operating System :: OS Independent', 'Programming Language :: Python', 'Programming Language :: Python :: 3', 'Programming Language :: Python :: 3 :: Only', 'Programming Language :: Python :: 3.8', 'Programming Language :: Python :: 3.9', 'Programming Language :: Python :: 3.10', 'Topic :: Scientific/Engineering :: Image Processing'], 'requires_dist': ['numpy', 'magicgui', 'qtpy', 'caped-ai', \"tox ; extra == 'testing'\", \"pytest ; extra == 'testing'\", \"pytest-cov ; extra == 'testing'\", \"pytest-qt ; extra == 'testing'\", \"napari ; extra == 'testing'\", \"pyqt5 ; extra == 'testing'\"], 'requires_python': '>=3.8', 'requires_external': None, 'project_url': ['Bug Tracker, https://github.com/Kapoorlabs-CAPED/vollseg-napari-mtrack/issues', 'Documentation, https://github.com/Kapoorlabs-CAPED/vollseg-napari-mtrack#README.md', 'Source Code, https://github.com/Kapoorlabs-CAPED/vollseg-napari-mtrack', 'User Support, https://github.com/Kapoorlabs-CAPED/vollseg-napari-mtrack/issues'], 'provides_extra': ['testing'], 'provides_dist': None, 'obsoletes_dist': None}, 'npe1_shim': False}\n"
        }
      ]
    },
    {
      "id": "BYtC",
      "code_hash": "6dec2b8b03598a003d93f48ad4f0ea82",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/plain": ""
          }
        }
      ],
      "console": []
    },
    {
      "id": "RGSE",
      "code_hash": "5e95c6528ee0c5aae86b3007dd2e82db",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/html": "<marimo-ui-element object-id='RGSE-0' random-id='5f599f52-5aa7-57b7-d019-9817f53cee45'><marimo-table data-initial-value='[]' data-label='null' data-data='&quot;[{&#92;&quot;normalized_name&#92;&quot;:&#92;&quot;acquifer-napari&#92;&quot;,&#92;&quot;name&#92;&quot;:&#92;&quot;acquifer-napari&#92;&quot;,&#92;&quot;version&#92;&quot;:&#92;&quot;0.0.2&#92;&quot;,&#92;&quot;display_name&#92;&quot;:&#92;&quot;acquifer-napari&#92;&quot;,&#92;&quot;summary&#92;&quot;:&#92;&quot;Loader plugin for napari, to load Acquifer Imaging Machine datasets in napari, using dask for efficient lazy data-loading.&#92;&quot;,&#92;&quot;author&#92;&quot;:&#92;&quot;Laurent Thomas&#92;&quot;,&#92;&quot;license&#92;&quot;:&#92;&quot;GPL-3.0-only&#92;&quot;,&#92;&quot;home_page&#92;&quot;:null,&#92;&quot;project_url&#92;&quot;:[&#92;&quot;HomePage, https://acquifer.de&#92;&quot;,&#92;&quot;Twitter, https://twitter.com/myacquifer&#92;&quot;,&#92;&quot;Bug Tracker, https://github.com/Luxendo/acquifer-napari/issues&#92;&quot;,&#92;&quot;Documentation, https://github.com/Luxendo/acquifer-napari#README.md&#92;&quot;,&#92;&quot;Source Code, https://github.com/Luxendo/acquifer-napari&#92;&quot;],&#92;&quot;pypi_versions&#92;&quot;:[&#92;&quot;0.0.2&#92;&quot;,&#92;&quot;0.0.1&#92;&quot;],&#92;&quot;conda_versions&#92;&quot;:[&#92;&quot;0.0.1&#92;&quot;]},{&#92;&quot;normalized_name&#92;&quot;:&#92;&quot;affinder&#92;&quot;,&#92;&quot;name&#92;&quot;:&#92;&quot;affinder&#92;&quot;,&#92;&quot;version&#92;&quot;:&#92;&quot;0.4.0&#92;&quot;,&#92;&quot;display_name&#92;&quot;:&#92;&quot;affinder&#92;&quot;,&#92;&quot;summary&#92;&quot;:&#92;&quot;Quickly find the affine matrix mapping one image to another using manual correspondence points annotation&#92;&quot;,&#92;&quot;author&#92;&quot;:&#92;&quot;Juan Nunez-Iglesias&#92;&quot;,&#92;&quot;license&#92;&quot;:&#92;&quot;BSD-3&#92;&quot;,&#92;&quot;home_page&#92;&quot;:&#92;&quot;https://github.com/jni/affinder&#92;&quot;,&#92;&quot;project_url&#92;&quot;:null,&#92;&quot;pypi_versions&#92;&quot;:[&#92;&quot;0.4.0&#92;&quot;,&#92;&quot;0.4.0rc0&#92;&quot;,&#92;&quot;0.3.2&#92;&quot;,&#92;&quot;0.2.3&#92;&quot;,&#92;&quot;0.2.2&#92;&quot;,&#92;&quot;0.2.1&#92;&quot;,&#92;&quot;0.2.0&#92;&quot;,&#92;&quot;0.1.0&#92;&quot;],&#92;&quot;conda_versions&#92;&quot;:[&#92;&quot;0.4.0&#92;&quot;,&#92;&quot;0.3.2&#92;&quot;,&#92;&quot;0.2.3&#92;&quot;,&#92;&quot;0.2.2&#92;&quot;]},{&#92;&quot;normalized_name&#92;&quot;:&#92;&quot;allencell-segmenter-ml&#92;&quot;,&#92;&quot;name&#92;&quot;:&#92;&quot;allencell-segmenter-ml&#92;&quot;,&#92;&quot;version&#92;&quot;:&#92;&quot;1.0.0&#92;&quot;,&#92;&quot;display_name&#92;&quot;:&#92;&quot;allencell-segmenter-ml&#92;&quot;,&#92;&quot;summary&#92;&quot;:&#92;&quot;A plugin to leverage ML segmentation in napari&#92;&quot;,&#92;&quot;author&#92;&quot;:null,&#92;&quot;license&#92;&quot;:&#92;&quot;Allen Institute Software License &#92;&#92;u2013 This software license is the 2-clause BSD license plus clause a third clause that&#92;&#92;nprohibits redistribution for commercial purposes without further permission.&#92;&#92;n&#92;&#92;nCopyright &#92;&#92;u00a9 2024. Allen Institute.  All rights reserved.&#92;&#92;n&#92;&#92;n&#92;&#92;n&#92;&#92;nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the&#92;&#92;nfollowing conditions are met:&#92;&#92;n&#92;&#92;n1. Redistributions of source code must retain the above copyright notice, this list of conditions&#92;&#92;nand the following disclaimer.&#92;&#92;n&#92;&#92;n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions&#92;&#92;nand the following disclaimer in the documentation and/or other materials provided with the distribution.&#92;&#92;n&#92;&#92;n3. Redistributions for commercial purposes are not permitted without the Allen Institute&#92;&#92;u2019s written permission.&#92;&#92;nFor purposes of this license, commercial purposes is the incorporation of the Allen Institute&#x27;s software into&#92;&#92;nanything for which you will charge fees or other compensation.&#92;&#92;nContact terms@alleninstitute.org for commercial licensing opportunities.&#92;&#92;n&#92;&#92;nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &#92;&#92;&#92;&quot;AS IS&#92;&#92;&#92;&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES,&#92;&#92;nINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE&#92;&#92;nARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#92;&#92;nINCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE&#92;&#92;nGOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY&#92;&#92;nOF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY&#92;&#92;nOUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#92;&#92;n&#92;&quot;,&#92;&quot;home_page&#92;&quot;:null,&#92;&quot;project_url&#92;&quot;:[&#92;&quot;Homepage, https://github.com/AllenCell/allencell-ml-segmenter&#92;&quot;,&#92;&quot;Bug Tracker, https://github.com/AllenCell/allencell-ml-segmenter/issues&#92;&quot;,&#92;&quot;Documentation, https://github.com/AllenCell/allencell-ml-segmenter#README.md&#92;&quot;,&#92;&quot;User Support, https://github.com/AllenCell/allencell-ml-segmenter/issues&#92;&quot;],&#92;&quot;pypi_versions&#92;&quot;:[&#92;&quot;1.0.0&#92;&quot;,&#92;&quot;1.0.0rc9&#92;&quot;,&#92;&quot;1.0.0rc8&#92;&quot;,&#92;&quot;1.0.0rc7&#92;&quot;,&#92;&quot;1.0.0rc6&#92;&quot;,&#92;&quot;1.0.0rc5&#92;&quot;,&#92;&quot;1.0.0rc4&#92;&quot;,&#92;&quot;1.0.0rc3&#92;&quot;,&#92;&quot;1.0.0rc2&#92;&quot;,&#92;&quot;1.0.0rc1&#92;&quot;,&#92;&quot;1.0.0rc0&#92;&quot;,&#92;&quot;0.1.17&#92;&quot;,&#92;&quot;0.1.16&#92;&quot;,&#92;&quot;0.1.16rc3&#92;&quot;,&#92;&quot;0.1.16rc2&#92;&quot;,&#92;&quot;0.1.16rc1&#92;&quot;,&#92;&quot;0.1.16rc0&#92;&quot;],&#92;&quot;conda_versions&#92;&quot;:[]},{&#92;&quot;normalized_name&#92;&quot;:&#92;&quot;alveoleye&#92;&quot;,&#92;&quot;name&#92;&quot;:&#92;&quot;AlveolEye&#92;&quot;,&#92;&quot;version&#92;&quot;:&#92;&quot;0.1.5&#92;&quot;,&#92;&quot;display_name&#92;&quot;:&#92;&quot;AlveolEye&#92;&quot;,&#92;&quot;summary&#92;&quot;:&#92;&quot;Reads lung slides with AI-driven and classical methods&#92;&quot;,&#92;&quot;author&#92;&quot;:&#92;&quot;Joseph Hirsh&#92;&quot;,&#92;&quot;license&#92;&quot;:&#92;&quot;BSD&#92;&quot;,&#92;&quot;home_page&#92;&quot;:null,&#92;&quot;project_url&#92;&quot;:null,&#92;&quot;pypi_versions&#92;&quot;:[&#92;&quot;0.1.5&#92;&quot;,&#92;&quot;0.1.4&#92;&quot;,&#92;&quot;0.1.3a0&#92;&quot;,&#92;&quot;0.1.2&#92;&quot;],&#92;&quot;conda_versions&#92;&quot;:[]},{&#92;&quot;normalized_name&#92;&quot;:&#92;&quot;anchor-droplet-chip&#92;&quot;,&#92;&quot;name&#92;&quot;:&#92;&quot;anchor-droplet-chip&#92;&quot;,&#92;&quot;version&#92;&quot;:&#92;&quot;0.4.6&#92;&quot;,&#92;&quot;display_name&#92;&quot;:&#92;&quot;anchor_droplet_chip&#92;&quot;,&#92;&quot;summary&#92;&quot;:&#92;&quot;Segment organoids and measure intensities&#92;&quot;,&#92;&quot;author&#92;&quot;:&#92;&quot;Andrey Aristov&#92;&quot;,&#92;&quot;license&#92;&quot;:&#92;&quot;BSD-3-Clause&#92;&quot;,&#92;&quot;home_page&#92;&quot;:&#92;&quot;https://github.com/BaroudLab/anchor-driplet-chip&#92;&quot;,&#92;&quot;project_url&#92;&quot;:[&#92;&quot;Source Code, https://github.com/BaroudLab/anchor-droplet-chip&#92;&quot;],&#92;&quot;pypi_versions&#92;&quot;:[&#92;&quot;0.4.6&#92;&quot;,&#92;&quot;0.4.4&#92;&quot;,&#92;&quot;0.4.3&#92;&quot;,&#92;&quot;0.4.0&#92;&quot;,&#92;&quot;0.3.2&#92;&quot;,&#92;&quot;0.3.1&#92;&quot;,&#92;&quot;0.3.0&#92;&quot;,&#92;&quot;0.2.9&#92;&quot;,&#92;&quot;0.2.8&#92;&quot;,&#92;&quot;0.2.7&#92;&quot;,&#92;&quot;0.2.6&#92;&quot;,&#92;&quot;0.2.4&#92;&quot;,&#92;&quot;0.2.3&#92;&quot;,&#92;&quot;0.2.2&#92;&quot;,&#92;&quot;0.2.1&#92;&quot;,&#92;&quot;0.2.0&#92;&quot;],&#92;&quot;conda_versions&#92;&quot;:[&#92;&quot;0.4.4&#92;&quot;,&#92;&quot;0.4.0&#92;&quot;]},{&#92;&quot;normalized_name&#92;&quot;:&#92;&quot;annotrack&#92;&quot;,&#92;&quot;name&#92;&quot;:&#92;&quot;annotrack&#92;&quot;,&#92;&quot;version&#92;&quot;:&#92;&quot;0.0.3&#92;&quot;,&#92;&quot;display_name&#92;&quot;:&#92;&quot;annotrack&#92;&quot;,&#92;&quot;summary&#92;&quot;:&#92;&quot;napari plugin for annotating tracks to estimate error rates&#92;&quot;,&#92;&quot;author&#92;&quot;:&#92;&quot;Abigail S McGovern&#92;&quot;,&#92;&quot;license&#92;&quot;:&#92;&quot;BSD-3-Clause&#92;&quot;,&#92;&quot;home_page&#92;&quot;:&#92;&quot;https://github.com/abigailmcgovern/annotrack&#92;&quot;,&#92;&quot;project_url&#92;&quot;:[&#92;&quot;Bug Tracker, https://github.com/abigailmcgovern/annotrack/issues&#92;&quot;,&#92;&quot;Documentation, https://github.com/abigailmcgovern/annotrack#README.md&#92;&quot;,&#92;&quot;Source Code, https://github.com/abigailmcgovern/annotrack&#92;&quot;,&#92;&quot;User Support, https://github.com/abigailmcgovern/annotrack/issues&#92;&quot;],&#92;&quot;pypi_versions&#92;&quot;:[&#92;&quot;0.0.3&#92;&quot;,&#92;&quot;0.0.3rc0&#92;&quot;,&#92;&quot;0.0.2&#92;&quot;,&#92;&quot;0.0.1&#92;&quot;],&#92;&quot;conda_versions&#92;&quot;:[]},{&#92;&quot;normalized_name&#92;&quot;:&#92;&quot;applet3&#92;&quot;,&#92;&quot;name&#92;&quot;:&#92;&quot;AppleT3&#92;&quot;,&#92;&quot;version&#92;&quot;:&#92;&quot;0.1.dev1&#92;&quot;,&#92;&quot;display_name&#92;&quot;:&#92;&quot;Appletree&#92;&quot;,&#92;&quot;summary&#92;&quot;:&#92;&quot;Apple tree segmentation for young apple tree&#92;&quot;,&#92;&quot;author&#92;&quot;:&#92;&quot;Herearii Metuarea&#92;&quot;,&#92;&quot;license&#92;&quot;:&#92;&quot;Copyright (c) 2025, Herearii Metuarea&#92;&#92;nAll rights reserved.&#92;&#92;n&#92;&#92;nRedistribution and use in source and binary forms, with or without&#92;&#92;nmodification, are permitted provided that the following conditions are met:&#92;&#92;n&#92;&#92;n* Redistributions of source code must retain the above copyright notice, this&#92;&#92;n  list of conditions and the following disclaimer.&#92;&#92;n&#92;&#92;n* Redistributions in binary form must reproduce the above copyright notice,&#92;&#92;n  this list of conditions and the following disclaimer in the documentation&#92;&#92;n  and/or other materials provided with the distribution.&#92;&#92;n&#92;&#92;n* Neither the name of copyright holder nor the names of its&#92;&#92;n  contributors may be used to endorse or promote products derived from&#92;&#92;n  this software without specific prior written permission.&#92;&#92;n&#92;&#92;nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &#92;&#92;&#92;&quot;AS IS&#92;&#92;&#92;&quot;&#92;&#92;nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE&#92;&#92;nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE&#92;&#92;nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE&#92;&#92;nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL&#92;&#92;nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#92;&#92;nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER&#92;&#92;nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,&#92;&#92;nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE&#92;&#92;nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#92;&#92;n&#92;&quot;,&#92;&quot;home_page&#92;&quot;:null,&#92;&quot;project_url&#92;&quot;:[&#92;&quot;Bug Tracker, https://github.com/hereariim/appletree/issues&#92;&quot;,&#92;&quot;Documentation, https://github.com/hereariim/appletree#README.md&#92;&quot;,&#92;&quot;Source Code, https://github.com/hereariim/appletree&#92;&quot;,&#92;&quot;User Support, https://github.com/hereariim/appletree/issues&#92;&quot;],&#92;&quot;pypi_versions&#92;&quot;:[&#92;&quot;0.1.dev1&#92;&quot;],&#92;&quot;conda_versions&#92;&quot;:[]},{&#92;&quot;normalized_name&#92;&quot;:&#92;&quot;arcos-gui&#92;&quot;,&#92;&quot;name&#92;&quot;:&#92;&quot;arcos-gui&#92;&quot;,&#92;&quot;version&#92;&quot;:&#92;&quot;0.1.5&#92;&quot;,&#92;&quot;display_name&#92;&quot;:&#92;&quot;napari ARCOS&#92;&quot;,&#92;&quot;summary&#92;&quot;:&#92;&quot;A napari plugin to detect and visualize collective signaling events&#92;&quot;,&#92;&quot;author&#92;&quot;:&#92;&quot;Benjamin Gr&#92;&#92;u00e4del&#92;&quot;,&#92;&quot;license&#92;&quot;:&#92;&quot;BSD-3-Clause&#92;&quot;,&#92;&quot;home_page&#92;&quot;:&#92;&quot;https://github.com/bgraedel/arcos-gui&#92;&quot;,&#92;&quot;project_url&#92;&quot;:[&#92;&quot;Bug Tracker, https://github.com/bgraedel/arcos-gui/issues&#92;&quot;,&#92;&quot;Documentation, https://pertzlab.github.io/arcos-gui/&#92;&quot;,&#92;&quot;Source Code, https://github.com/bgraedel/arcos-gui&#92;&quot;,&#92;&quot;User Support, https://github.com/bgraedel/arcos-gui/issues&#92;&quot;],&#92;&quot;pypi_versions&#92;&quot;:[&#92;&quot;0.1.5&#92;&quot;,&#92;&quot;0.1.4&#92;&quot;,&#92;&quot;0.1.3&#92;&quot;,&#92;&quot;0.1.2&#92;&quot;,&#92;&quot;0.1.1&#92;&quot;,&#92;&quot;0.1.0&#92;&quot;,&#92;&quot;0.0.7&#92;&quot;,&#92;&quot;0.0.6&#92;&quot;,&#92;&quot;0.0.5&#92;&quot;,&#92;&quot;0.0.4&#92;&quot;,&#92;&quot;0.0.3&#92;&quot;,&#92;&quot;0.0.2&#92;&quot;,&#92;&quot;0.0.1&#92;&quot;],&#92;&quot;conda_versions&#92;&quot;:[&#92;&quot;0.1.3&#92;&quot;,&#92;&quot;0.1.2&#92;&quot;,&#92;&quot;0.1.1&#92;&quot;,&#92;&quot;0.1.0&#92;&quot;,&#92;&quot;0.0.7&#92;&quot;,&#92;&quot;0.0.6&#92;&quot;,&#92;&quot;0.0.4&#92;&quot;]},{&#92;&quot;normalized_name&#92;&quot;:&#92;&quot;arcospx-napari&#92;&quot;,&#92;&quot;name&#92;&quot;:&#92;&quot;arcosPx-napari&#92;&quot;,&#92;&quot;version&#92;&quot;:&#92;&quot;0.1.3&#92;&quot;,&#92;&quot;display_name&#92;&quot;:&#92;&quot;arcosPx&#92;&quot;,&#92;&quot;summary&#92;&quot;:&#92;&quot;A plugin to track spatio-temporal correlations in images&#92;&quot;,&#92;&quot;author&#92;&quot;:&#92;&quot;Benjamin Gr&#92;&#92;u00e4del&#92;&quot;,&#92;&quot;license&#92;&quot;:&#92;&quot;BSD-3-Clause&#92;&quot;,&#92;&quot;home_page&#92;&quot;:&#92;&quot;https://github.com/pertzlab/arcosPx-napari&#92;&quot;,&#92;&quot;project_url&#92;&quot;:[&#92;&quot;Bug Tracker, https://github.com/pertzlab/arcosPx-napari/issues&#92;&quot;,&#92;&quot;Documentation, https://github.com/pertzlab/arcosPx-napari#README.md&#92;&quot;,&#92;&quot;Source Code, https://github.com/pertzlab/arcosPx-napari&#92;&quot;,&#92;&quot;User Support, https://github.com/pertzlab/arcosPx-napari/issues&#92;&quot;],&#92;&quot;pypi_versions&#92;&quot;:[&#92;&quot;0.1.3&#92;&quot;,&#92;&quot;0.1.2&#92;&quot;,&#92;&quot;0.1.1&#92;&quot;,&#92;&quot;0.1.0&#92;&quot;],&#92;&quot;conda_versions&#92;&quot;:[]},{&#92;&quot;normalized_name&#92;&quot;:&#92;&quot;avidaq&#92;&quot;,&#92;&quot;name&#92;&quot;:&#92;&quot;avidaq&#92;&quot;,&#92;&quot;version&#92;&quot;:&#92;&quot;0.0.5&#92;&quot;,&#92;&quot;display_name&#92;&quot;:&#92;&quot;napari avidaq&#92;&quot;,&#92;&quot;summary&#92;&quot;:&#92;&quot;controls for napari and micromanger&#92;&quot;,&#92;&quot;author&#92;&quot;:&#92;&quot;Riley M Shea&#92;&quot;,&#92;&quot;license&#92;&quot;:&#92;&quot;BSD-3-Clause&#92;&quot;,&#92;&quot;home_page&#92;&quot;:null,&#92;&quot;project_url&#92;&quot;:null,&#92;&quot;pypi_versions&#92;&quot;:[&#92;&quot;0.0.5&#92;&quot;,&#92;&quot;0.0.4&#92;&quot;,&#92;&quot;0.0.3&#92;&quot;,&#92;&quot;0.0.2&#92;&quot;,&#92;&quot;0.0.1&#92;&quot;],&#92;&quot;conda_versions&#92;&quot;:[&#92;&quot;0.0.5&#92;&quot;,&#92;&quot;0.0.4&#92;&quot;]}]&quot;' data-total-rows='520' data-total-columns='11' data-max-columns='50' data-banner-text='&quot;&quot;' data-pagination='true' data-page-size='10' data-field-types='[[&quot;normalized_name&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;name&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;version&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;display_name&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;summary&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;author&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;license&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;home_page&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;project_url&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;pypi_versions&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;conda_versions&quot;, [&quot;string&quot;, &quot;object&quot;]]]' data-show-filters='true' data-show-download='true' data-show-column-summaries='true' data-row-headers='[]' data-has-stable-row-id='false' data-lazy='false' data-preload='false'></marimo-table></marimo-ui-element>"
          }
        }
      ],
      "console": [
        {
          "type": "stream",
          "name": "stderr",
          "text": "\u001b[33m[W 250620 09:21:34 preview_column:109]\u001b(B\u001b[m Failed to get chart for column project_url in table _df\n    Traceback (most recent call last):\n      File \"/Users/willingc/Code/repos-napari/hub-lite/.venv/lib/python3.13/site-packages/marimo/_data/preview_column.py\", line 104, in get_column_preview_dataset\n        ) = _get_altair_chart(\n            ~~~~~~~~~~~~~~~~~^\n            table_name, column_name, table, stats, table_rows\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        )\n        ^\n      File \"/Users/willingc/Code/repos-napari/hub-lite/.venv/lib/python3.13/site-packages/marimo/_data/preview_column.py\", line 275, in _get_altair_chart\n        chart_spec = _get_chart_spec(\n            column_data=column_data,\n        ...<2 lines>...\n            should_limit_to_10_items=should_limit_to_10_items,\n        )\n      File \"/Users/willingc/Code/repos-napari/hub-lite/.venv/lib/python3.13/site-packages/marimo/_data/preview_column.py\", line 305, in _get_chart_spec\n        return chart_builder.altair_json(\n               ~~~~~~~~~~~~~~~~~~~~~~~~~^\n            column_data,\n            ^^^^^^^^^^^^\n            column_name,\n            ^^^^^^^^^^^^\n        )\n        ^\n      File \"/Users/willingc/Code/repos-napari/hub-lite/.venv/lib/python3.13/site-packages/marimo/_data/charts.py\", line 31, in altair_json\n        return cast(str, self.altair(data, column).to_json(format=\"vega\"))\n                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^\n      File \"/Users/willingc/Code/repos-napari/hub-lite/.venv/lib/python3.13/site-packages/altair/vegalite/v5/api.py\", line 2096, in to_json\n        spec = self.to_dict(\n            validate=validate, format=format, ignore=ignore, context=context\n        )\n      File \"/Users/willingc/Code/repos-napari/hub-lite/.venv/lib/python3.13/site-packages/altair/vegalite/v5/api.py\", line 2039, in to_dict\n        return _compile_with_vegafusion(vegalite_spec)\n      File \"/Users/willingc/Code/repos-napari/hub-lite/.venv/lib/python3.13/site-packages/altair/utils/_vegafusion_data.py\", line 273, in compile_with_vegafusion\n        transformed_vega_spec, warnings = vf.runtime.pre_transform_spec(\n                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^\n            vega_spec,\n            ^^^^^^^^^^\n        ...<2 lines>...\n            row_limit=row_limit,\n            ^^^^^^^^^^^^^^^^^^^^\n        )\n        ^\n      File \"/Users/willingc/Code/repos-napari/hub-lite/.venv/lib/python3.13/site-packages/vegafusion/runtime.py\", line 412, in pre_transform_spec\n        new_spec, warnings = self.runtime.pre_transform_spec(\n                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^\n            spec,\n            ^^^^^\n        ...<6 lines>...\n            keep_datasets=parse_variables(keep_datasets),\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        )\n        ^\n    ValueError: DataFusion error: Arrow error: Invalid argument error: Nested comparison: List(Field { name: \"item\", data_type: Utf8, nullable: true, dict_id: 0, dict_is_ordered: false, metadata: {} }) IS DISTINCT FROM List(Field { name: \"item\", data_type: Utf8, nullable: true, dict_id: 0, dict_is_ordered: false, metadata: {} }) (hint: use make_comparator instead)\n        Context[0]: Failed to query node values\n    \n"
        }
      ]
    },
    {
      "id": "Kclp",
      "code_hash": "7e9f6d696eee09740f048df15a579c20",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/plain": ""
          }
        }
      ],
      "console": []
    }
  ]
}